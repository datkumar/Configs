{
    "basic": {
        "prefix": "basic",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;\n",
            "int main()",
            "{",
            "\t$1",
            "\n\treturn 0;",
            "}"
        ],
        "description": "C++ template bolierplate"
    },
    "stl": {
        "prefix": "stl",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;\n"
        ],
        "description": "include STL"
    },
    "CP Boilerplate": {
        "prefix": "CP Boilerplate",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "",
            "typedef long long ll;",
            "",
            "typedef vector<int> vi;",
            "typedef vector<vi> vvi;",
            "typedef pair<int, int> pi;",
            "",
            "template <typename T> using max_heap = priority_queue<T>;",
            "template <typename T> using min_heap = priority_queue<T, vector<T>, greater<T>>;",
            "",
            "#define REP(i, low, high) for (int i = low; i <= high; ++i)",
            "#define SQ(x) (x) * (x)",
            "",
            "#define F first",
            "#define S second",
            "#define PB emplace_back",
            "#define MP make_pair",
            "",
            "#define int long long",
            "",
            "void file_io()",
            "{",
            "",
            "#ifndef ONLINE_JUDGE",
            "    (void) freopen(\"./input1.txt\", \"r\", stdin);",
            "    (void) freopen(\"./output1.txt\", \"w\", stdout);",
            "#endif",
            "",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(0); // Disable this for Interactive Problems",
            "}",
            "",
            "vector<bool> Sieve(int N)",
            "{",
            "    vector<bool> prime(N + 1, true);",
            "    prime[0] = prime[1] = false;",
            "    for (int i = 2; i * i <= N; ++i)",
            "    {",
            "        if (!prime[i])",
            "            continue;",
            "        for (int j = i * i; j <= N; j += i)",
            "            prime[j] = false;",
            "    }",
            "    return prime;",
            "}",
            "",
            "int binPowModulo(int base, int expo, int M)",
            "{",
            "    base %= M;",
            "    int ans = 1;",
            "    while (expo > 0)",
            "    {",
            "        if (expo & 1)   // ODD power",
            "            ans = ans * base % M;",
            "        base = base * base % M;",
            "        expo >>= 1;     // divide by 2",
            "    }",
            "    return ans;",
            "}",
            "",
            "void solve()",
            "{",
            "    ",
            "    ",
            "}",
            "",
            "signed main()",
            "{",
            "    // file_io();",
            "",
            "    int T = 1;",
            "    // cin >> T;",
            "    while (T--)",
            "    {",
            "        // solve();",
            "    }",
            "",
            "    return 0;",
            "}"
        ],
        "description": "CP Boilerplate"
    },
    "CP config": {
        "prefix": "CP config",
        "body": [
            "#include \"myconfig.h\"",
            "using namespace std;",
            "",
            "void solve()",
            "{",
            "    ",
            "}",
            "",
            "signed main()",
            "{",
            "    file_io();",
            "",
            "    int T = 1;",
            "    // cin >> T;",
            "    while (T--)",
            "    {",
            "        // solve();",
            "    }",
            "",
            "    return 0;",
            "}"
        ],
        "description": "CP config"
    }
}